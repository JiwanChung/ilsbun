{"version":3,"sources":["meteor://ðŸ’»app/packages/jalik:ufs/ufs.js","meteor://ðŸ’»app/packages/jalik:ufs/ufs-mime.js","meteor://ðŸ’»app/packages/jalik:ufs/ufs-utilities.js","meteor://ðŸ’»app/packages/jalik:ufs/ufs-config.js","meteor://ðŸ’»app/packages/jalik:ufs/ufs-filter.js","meteor://ðŸ’»app/packages/jalik:ufs/ufs-store-permissions.js","meteor://ðŸ’»app/packages/jalik:ufs/ufs-store.js","meteor://ðŸ’»app/packages/jalik:ufs/ufs-methods.js","meteor://ðŸ’»app/packages/jalik:ufs/ufs-server.js"],"names":[],"mappings":"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","file":"/packages/jalik_ufs.js","sourcesContent":["import {_} from 'meteor/underscore';\nimport {Meteor} from 'meteor/meteor';\nimport {Mongo} from 'meteor/mongo';\n\nlet stores = {};\n\nUploadFS = {\n\n    /**\n     * Contains all stores\n     */\n    store: {},\n\n    /**\n     * Collection of tokens\n     */\n    tokens: new Mongo.Collection('ufsTokens'),\n\n    /**\n     * Returns the store by its name\n     * @param name\n     * @return {UploadFS.Store}\n     */\n    getStore: (name) => {\n        return stores[name];\n    },\n\n    /**\n     * Returns all stores\n     * @return {object}\n     */\n    getStores: () => {\n        return stores;\n    },\n\n    /**\n     * Returns the temporary file path\n     * @param fileId\n     * @return {string}\n     */\n    getTempFilePath: (fileId) => {\n        return `${UploadFS.config.tmpDir}/${fileId}`;\n    },\n\n    /**\n     * Imports a file from a URL\n     * @param url\n     * @param file\n     * @param store\n     * @param callback\n     */\n    importFromURL: (url, file, store, callback) => {\n        if (typeof store === 'string') {\n            Meteor.call('ufsImportURL', url, file, store, callback);\n        }\n        else if (typeof store === 'object') {\n            store.importFromURL(url, file, callback);\n        }\n    }\n};\n","/**\n * MIME types and extensions\n */\nconst MIME = {\n\n    // application\n    '7z': 'application/x-7z-compressed',\n    'arc': 'application/octet-stream',\n    'ai': 'application/postscript',\n    'bin': 'application/octet-stream',\n    'bz': 'application/x-bzip',\n    'bz2': 'application/x-bzip2',\n    'eps': 'application/postscript',\n    'exe': 'application/octet-stream',\n    'gz': 'application/x-gzip',\n    'gzip': 'application/x-gzip',\n    'js': 'application/javascript',\n    'json': 'application/json',\n    'ogx': 'application/ogg',\n    'pdf': 'application/pdf',\n    'ps': 'application/postscript',\n    'psd': 'application/octet-stream',\n    'rar': 'application/x-rar-compressed',\n    'rev': 'application/x-rar-compressed',\n    'swf': 'application/x-shockwave-flash',\n    'tar': 'application/x-tar',\n    'xhtml': 'application/xhtml+xml',\n    'xml': 'application/xml',\n    'zip': 'application/zip',\n\n    // audio\n    'aif': 'audio/aiff',\n    'aifc': 'audio/aiff',\n    'aiff': 'audio/aiff',\n    'au': 'audio/basic',\n    'flac': 'audio/flac',\n    'midi': 'audio/midi',\n    'mp2': 'audio/mpeg',\n    'mp3': 'audio/mpeg',\n    'mpa': 'audio/mpeg',\n    'oga': 'audio/ogg',\n    'ogg': 'audio/ogg',\n    'opus': 'audio/ogg',\n    'ra': 'audio/vnd.rn-realaudio',\n    'spx': 'audio/ogg',\n    'wav': 'audio/x-wav',\n    'weba': 'audio/webm',\n    'wma': 'audio/x-ms-wma',\n\n    // image\n    'avs': 'image/avs-video',\n    'bmp': 'image/x-windows-bmp',\n    'gif': 'image/gif',\n    'ico': 'image/vnd.microsoft.icon',\n    'jpeg': 'image/jpeg',\n    'jpg': 'image/jpg',\n    'mjpg': 'image/x-motion-jpeg',\n    'pic': 'image/pic',\n    'png': 'image/png',\n    'svg': 'image/svg+xml',\n    'tif': 'image/tiff',\n    'tiff': 'image/tiff',\n\n    // text\n    'css': 'text/css',\n    'csv': 'text/csv',\n    'html': 'text/html',\n    'txt': 'text/plain',\n\n    // video\n    'avi': 'video/avi',\n    'dv': 'video/x-dv',\n    'flv': 'video/x-flv',\n    'mov': 'video/quicktime',\n    'mp4': 'video/mp4',\n    'mpeg': 'video/mpeg',\n    'mpg': 'video/mpg',\n    'ogv': 'video/ogg',\n    'vdo': 'video/vdo',\n    'webm': 'video/webm',\n    'wmv': 'video/x-ms-wmv',\n\n    // specific to vendors\n    'doc': 'application/msword',\n    'docx': 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n    'odb': 'application/vnd.oasis.opendocument.database',\n    'odc': 'application/vnd.oasis.opendocument.chart',\n    'odf': 'application/vnd.oasis.opendocument.formula',\n    'odg': 'application/vnd.oasis.opendocument.graphics',\n    'odi': 'application/vnd.oasis.opendocument.image',\n    'odm': 'application/vnd.oasis.opendocument.text-master',\n    'odp': 'application/vnd.oasis.opendocument.presentation',\n    'ods': 'application/vnd.oasis.opendocument.spreadsheet',\n    'odt': 'application/vnd.oasis.opendocument.text',\n    'otg': 'application/vnd.oasis.opendocument.graphics-template',\n    'otp': 'application/vnd.oasis.opendocument.presentation-template',\n    'ots': 'application/vnd.oasis.opendocument.spreadsheet-template',\n    'ott': 'application/vnd.oasis.opendocument.text-template',\n    'ppt': 'application/vnd.ms-powerpoint',\n    'pptx': 'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n    'xls': 'application/vnd.ms-excel',\n    'xlsx': 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n\n};\n\n/**\n * Adds the MIME type for an extension\n * @param extension\n * @param mime\n */\nUploadFS.addMimeType = function (extension, mime) {\n    MIME[extension.toLowerCase()] = mime;\n};\n\n/**\n * Returns the MIME type of the extension\n * @param extension\n * @returns {*}\n */\nUploadFS.getMimeType = function (extension) {\n    extension = extension.toLowerCase();\n    return MIME[extension];\n};\n\n/**\n * Returns all MIME types\n */\nUploadFS.getMimeTypes = function () {\n    return MIME;\n};\n","import {Meteor} from 'meteor/meteor';\nimport {_} from 'meteor/underscore';\n\n\nif (Meteor.isClient) {\n\n    /**\n     * Returns file and data as ArrayBuffer for each files in the event\n     * @deprecated\n     * @param event\n     * @param callback\n     */\n    // todo remove deprecated method\n    UploadFS.readAsArrayBuffer = (event, callback) => {\n        console.error('UploadFS.readAsArrayBuffer is deprecated, see https://github.com/jalik/jalik-ufs#uploading-from-a-file');\n    };\n\n    /**\n     * Opens a dialog to select a single file\n     * @param callback\n     */\n    UploadFS.selectFile = (callback) => {\n        let input = document.createElement('input');\n        input.type = 'file';\n        input.multiple = false;\n        input.onchange = (ev) => {\n            let files = ev.target.files;\n            callback.call(UploadFS, files[0]);\n        };\n        // Fix for iOS\n        input.style = 'display:none';\n        document.body.appendChild(input);\n        input.click();\n    };\n\n    /**\n     * Opens a dialog to select multiple files\n     * @param callback\n     */\n    UploadFS.selectFiles = (callback) => {\n        let input = document.createElement('input');\n        input.type = 'file';\n        input.multiple = true;\n        input.onchange = (ev) => {\n            let files = ev.target.files;\n\n            for (let i = 0; i < files.length; i += 1) {\n                callback.call(UploadFS, files[i]);\n            }\n        };\n        // Fix for iOS\n        input.style = 'display:none';\n        document.body.appendChild(input);\n        input.click();\n    };\n}\n\n\nif (Meteor.isServer) {\n\n    /**\n     * Adds the path attribute to files\n     * @param where\n     */\n    UploadFS.addPathAttributeToFiles = (where)=> {\n        _.each(UploadFS.getStores(), (store)=> {\n            let files = store.getCollection();\n\n            // By default update only files with no path set\n            files.find(where || {path: null}, {fields: {_id: 1}}).forEach((file)=> {\n                let path = store.getFileRelativeURL(file._id);\n                files.update({_id: file._id}, {$set: {path: path}});\n            });\n        });\n    };\n}\n","import {_} from 'meteor/underscore';\nimport {Meteor} from 'meteor/meteor';\n\n/**\n * UploadFS configuration\n * @param options\n * @constructor\n */\nUploadFS.Config = function (options) {\n    // Default options\n    options = _.extend({\n        defaultStorePermissions: null,\n        https: false,\n        simulateReadDelay: 0,\n        simulateUploadSpeed: 0,\n        simulateWriteDelay: 0,\n        storesPath: 'ufs',\n        tmpDir: '/tmp/ufs',\n        tmpDirPermissions: '0700'\n    }, options);\n\n    // Check options\n    if (options.defaultStorePermissions && !(options.defaultStorePermissions instanceof UploadFS.StorePermissions)) {\n        throw new TypeError('defaultStorePermissions is not an instance of UploadFS.StorePermissions');\n    }\n    if (typeof options.https !== 'boolean') {\n        throw new TypeError('https is not a function');\n    }\n    if (typeof options.simulateReadDelay !== 'number') {\n        throw new Meteor.Error('simulateReadDelay is not a number');\n    }\n    if (typeof options.simulateUploadSpeed !== 'number') {\n        throw new Meteor.Error('simulateUploadSpeed is not a number');\n    }\n    if (typeof options.simulateWriteDelay !== 'number') {\n        throw new Meteor.Error('simulateWriteDelay is not a number');\n    }\n    if (typeof options.storesPath !== 'string') {\n        throw new Meteor.Error('storesPath is not a string');\n    }\n    if (typeof options.tmpDir !== 'string') {\n        throw new Meteor.Error('tmpDir is not a string');\n    }\n    if (typeof options.tmpDirPermissions !== 'string') {\n        throw new Meteor.Error('tmpDirPermissions is not a string');\n    }\n\n    /**\n     * Default store permissions\n     * @type {UploadFS.StorePermissions}\n     */\n    this.defaultStorePermissions = options.defaultStorePermissions;\n    /**\n     * Use or not secured protocol in URLS\n     * @type {boolean}\n     */\n    this.https = options.https;\n    /**\n     * The simulation read delay\n     * @type {Number}\n     */\n    this.simulateReadDelay = parseInt(options.simulateReadDelay);\n    /**\n     * The simulation upload speed\n     * @type {Number}\n     */\n    this.simulateUploadSpeed = parseInt(options.simulateUploadSpeed);\n    /**\n     * The simulation write delay\n     * @type {Number}\n     */\n    this.simulateWriteDelay = parseInt(options.simulateWriteDelay);\n    /**\n     * The URL root path of stores\n     * @type {string}\n     */\n    this.storesPath = options.storesPath;\n    /**\n     * The temporary directory of uploading files\n     * @type {string}\n     */\n    this.tmpDir = options.tmpDir;\n    /**\n     * The permissions of the temporary directory\n     * @type {string}\n     */\n    this.tmpDirPermissions = options.tmpDirPermissions;\n};\n\n/**\n * Global configuration\n * @type {UploadFS.Config}\n */\nUploadFS.config = new UploadFS.Config();\n","import {_} from 'meteor/underscore';\n\n/**\n * File filter\n * @param options\n * @constructor\n */\nUploadFS.Filter = function (options) {\n    let self = this;\n\n    // Default options\n    options = _.extend({\n        contentTypes: null,\n        extensions: null,\n        minSize: 1,\n        maxSize: 0,\n        onCheck: null\n    }, options);\n\n    // Check options\n    if (options.contentTypes && !(options.contentTypes instanceof Array)) {\n        throw new TypeError('contentTypes is not an Array');\n    }\n    if (options.extensions && !(options.extensions instanceof Array)) {\n        throw new TypeError('extensions is not an Array');\n    }\n    if (typeof options.minSize !== 'number') {\n        throw new TypeError('minSize is not a number');\n    }\n    if (typeof options.maxSize !== 'number') {\n        throw new TypeError('maxSize is not a number');\n    }\n    if (options.onCheck && typeof options.onCheck !== 'function') {\n        throw new TypeError('onCheck is not a function');\n    }\n\n    // Private attributes\n    let contentTypes = options.contentTypes;\n    let extensions = options.extensions;\n    let onCheck = options.onCheck;\n    let maxSize = parseInt(options.maxSize);\n    let minSize = parseInt(options.minSize);\n\n    /**\n     * Checks the file\n     * @param file\n     */\n    self.check = (file) => {\n        // Check size\n        if (file.size <= 0 || file.size < self.getMinSize()) {\n            throw new Meteor.Error('file-too-small', 'File is too small (min =' + self.getMinSize() + ')');\n        }\n        if (self.getMaxSize() > 0 && file.size > self.getMaxSize()) {\n            throw new Meteor.Error('file-too-large', 'File is too large (max = ' + self.getMaxSize() + ')');\n        }\n        // Check extension\n        if (self.getExtensions() && !_.contains(self.getExtensions(), file.extension)) {\n            throw new Meteor.Error('invalid-file-extension', 'File extension is not accepted');\n        }\n        // Check content type\n        if (self.getContentTypes() && !checkContentType(file.type, self.getContentTypes())) {\n            throw new Meteor.Error('invalid-file-type', 'File type is not accepted');\n        }\n        // Apply custom check\n        if (typeof onCheck === 'function' && !onCheck.call(self, file)) {\n            throw new Meteor.Error('invalid-file', 'File does not match filter');\n        }\n    };\n\n    /**\n     * Returns the allowed content types\n     * @return {Array}\n     */\n    self.getContentTypes = () => {\n        return contentTypes;\n    };\n\n    /**\n     * Returns the allowed extensions\n     * @return {Array}\n     */\n    self.getExtensions = () => {\n        return extensions;\n    };\n\n    /**\n     * Returns the maximum file size\n     * @return {Number}\n     */\n    self.getMaxSize = () => {\n        return maxSize;\n    };\n\n    /**\n     * Returns the minimum file size\n     * @return {Number}\n     */\n    self.getMinSize = () => {\n        return minSize;\n    };\n\n    /**\n     * Checks if the file matches filter\n     * @param file\n     * @return {boolean}\n     */\n    self.isValid = (file) => {\n        let result = true;\n        try {\n            self.check(file);\n        } catch (err) {\n            result = false;\n        }\n        return result;\n    };\n};\n\nfunction checkContentType(type, list) {\n    if (type) {\n        if (_.contains(list, type)) {\n            return true;\n        } else {\n            let wildCardGlob = '/*';\n            let wildcards = _.filter(list, (item) => {\n                return item.indexOf(wildCardGlob) > 0;\n            });\n\n            if (_.contains(wildcards, type.replace(/(\\/.*)$/, wildCardGlob))) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n","import {_} from 'meteor/underscore';\n\n/**\n * Store permissions\n * @param options\n * @constructor\n */\nUploadFS.StorePermissions = function (options) {\n    // Default options\n    options = _.extend({\n        insert: null,\n        remove: null,\n        update: null\n    }, options);\n\n    // Check options\n    if (typeof options.insert === 'function') {\n        this.insert = options.insert;\n    }\n    if (typeof options.remove === 'function') {\n        this.remove = options.remove;\n    }\n    if (typeof options.update === 'function') {\n        this.update = options.update;\n    }\n\n    let checkPermission = (permission, userId, file, fields, modifiers)=> {\n        if (typeof this[permission] === 'function') {\n            return this[permission](userId, file, fields, modifiers);\n        }\n        return true; // by default allow all\n    };\n\n    /**\n     * Checks the insert permission\n     * @param userId\n     * @param file\n     * @returns {*}\n     */\n    this.checkInsert = (userId, file) => {\n        return checkPermission('insert', userId, file);\n    };\n    /**\n     * Checks the remove permission\n     * @param userId\n     * @param file\n     * @returns {*}\n     */\n    this.checkRemove = (userId, file) => {\n        return checkPermission('remove', userId, file);\n    };\n    /**\n     * Checks the update permission\n     * @param userId\n     * @param file\n     * @param fields\n     * @param modifiers\n     * @returns {*}\n     */\n    this.checkUpdate = (userId, file, fields, modifiers) => {\n        return checkPermission('update', userId, file, fields, modifiers);\n    };\n};\n","import {_} from 'meteor/underscore';\nimport {check} from 'meteor/check';\nimport {Meteor} from 'meteor/meteor';\nimport {Mongo} from 'meteor/mongo';\n\n/**\n * File store\n * @param options\n * @constructor\n */\nUploadFS.Store = function (options) {\n    let self = this;\n\n    // Default options\n    options = _.extend({\n        collection: null,\n        filter: null,\n        name: null,\n        onCopyError: null,\n        onFinishUpload: null,\n        onRead: null,\n        onReadError: null,\n        onWriteError: null,\n        permissions: null,\n        transformRead: null,\n        transformWrite: null\n    }, options);\n\n    // Check instance\n    if (!(self instanceof UploadFS.Store)) {\n        throw new Error('UploadFS.Store is not an instance');\n    }\n\n    // Check options\n    if (!(options.collection instanceof Mongo.Collection)) {\n        throw new TypeError('collection is not a Mongo.Collection');\n    }\n    if (options.filter && !(options.filter instanceof UploadFS.Filter)) {\n        throw new TypeError('filter is not a UploadFS.Filter');\n    }\n    if (typeof options.name !== 'string') {\n        throw new TypeError('name is not a string');\n    }\n    if (UploadFS.getStore(options.name)) {\n        throw new TypeError('name already exists');\n    }\n    if (options.onCopyError && typeof options.onCopyError !== 'function') {\n        throw new TypeError('onCopyError is not a function');\n    }\n    if (options.onFinishUpload && typeof options.onFinishUpload !== 'function') {\n        throw new TypeError('onFinishUpload is not a function');\n    }\n    if (options.onRead && typeof options.onRead !== 'function') {\n        throw new TypeError('onRead is not a function');\n    }\n    if (options.onReadError && typeof options.onReadError !== 'function') {\n        throw new TypeError('onReadError is not a function');\n    }\n    if (options.onWriteError && typeof options.onWriteError !== 'function') {\n        throw new TypeError('onWriteError is not a function');\n    }\n    if (options.permissions && !(options.permissions instanceof UploadFS.StorePermissions)) {\n        throw new TypeError('permissions is not a UploadFS.StorePermissions');\n    }\n    if (options.transformRead && typeof options.transformRead !== 'function') {\n        throw new TypeError('transformRead is not a function');\n    }\n    if (options.transformWrite && typeof options.transformWrite !== 'function') {\n        throw new TypeError('transformWrite is not a function');\n    }\n\n    // Public attributes\n    self.onCopyError = options.onCopyError || self.onCopyError;\n    self.onFinishUpload = options.onFinishUpload || self.onFinishUpload;\n    self.onRead = options.onRead || self.onRead;\n    self.onReadError = options.onReadError || self.onReadError;\n    self.onWriteError = options.onWriteError || self.onWriteError;\n    self.permissions = options.permissions;\n\n    // Private attributes\n    let collection = options.collection;\n    let copyTo = options.copyTo;\n    let filter = options.filter;\n    let name = options.name;\n    let transformRead = options.transformRead;\n    let transformWrite = options.transformWrite;\n\n    // Set default permissions\n    if (!(self.permissions instanceof UploadFS.StorePermissions)) {\n        // Uses user's default permissions or UFS default permissions (deny all)\n        if (UploadFS.config.defaultStorePermissions instanceof UploadFS.StorePermissions) {\n            self.permissions = UploadFS.config.defaultStorePermissions;\n        } else {\n            self.permissions = new UploadFS.StorePermissions();\n            console.warn(`ufs: permissions are not defined for store \"${name}\"`);\n        }\n    }\n\n    // Add the store to the list\n    UploadFS.getStores()[name] = self;\n\n    /**\n     * Returns the collection\n     * @return {Mongo.Collection}\n     */\n    self.getCollection = function () {\n        return collection;\n    };\n\n    /**\n     * Returns the file filter\n     * @return {UploadFS.Filter}\n     */\n    self.getFilter = function () {\n        return filter;\n    };\n\n    /**\n     * Returns the store name\n     * @return {string}\n     */\n    self.getName = function () {\n        return name;\n    };\n\n    /**\n     * Defines the store permissions\n     * @param permissions\n     */\n    self.setPermissions = function (permissions) {\n        if (!(permissions instanceof UploadFS.StorePermissions)) {\n            throw new TypeError(\"permissions is not an instance of UploadFS.StorePermissions\");\n        }\n        self.permissions = permissions;\n    };\n\n    if (Meteor.isServer) {\n\n        /**\n         * Checks token validity\n         * @param token\n         * @param fileId\n         * @returns {boolean}\n         */\n        self.checkToken = function (token, fileId) {\n            check(token, String);\n            check(fileId, String);\n            return UploadFS.tokens.find({value: token, fileId: fileId}).count() === 1;\n        };\n\n        /**\n         * Copies the file to a store\n         * @param fileId\n         * @param store\n         * @param callback\n         */\n        self.copy = function (fileId, store, callback) {\n            check(fileId, String);\n\n            if (!(store instanceof UploadFS.Store)) {\n                throw new TypeError('store is not a UploadFS.store.Store');\n            }\n            // Get original file\n            let file = collection.findOne({_id: fileId});\n            if (!file) {\n                throw new Meteor.Error(404, 'File not found');\n            }\n            // Ignore the file if it does not match store filter\n            let filter = store.getFilter();\n            if (filter instanceof UploadFS.Filter && !filter.isValid(file)) {\n                return;\n            }\n\n            // Prepare copy\n            let copy = _.omit(file, '_id', 'url');\n            copy.originalStore = self.getName();\n            copy.originalId = fileId;\n\n            // Create the copy\n            let copyId = store.create(copy);\n\n            // Get original stream\n            let rs = self.getReadStream(fileId, file);\n\n            // Catch errors to avoid app crashing\n            rs.on('error', Meteor.bindEnvironment(function (err) {\n                callback.call(self, err, null);\n            }));\n\n            // Copy file data\n            store.write(rs, copyId, Meteor.bindEnvironment(function (err) {\n                if (err) {\n                    collection.remove({_id: copyId});\n                    self.onCopyError.call(self, err, fileId, file);\n                }\n                if (typeof callback === 'function') {\n                    callback.call(self, err, copyId, copy, store);\n                }\n            }));\n        };\n\n        /**\n         * Creates the file in the collection\n         * @param file\n         * @param callback\n         * @return {string}\n         */\n        self.create = function (file, callback) {\n            check(file, Object);\n            file.store = name;\n            return collection.insert(file, callback);\n        };\n\n        /**\n         * Creates a token for the file (only needed for client side upload)\n         * @param fileId\n         * @returns {*}\n         */\n        self.createToken = function (fileId) {\n            let token = self.generateToken();\n\n            // Check if token exists\n            if (UploadFS.tokens.find({fileId: fileId}).count()) {\n                UploadFS.tokens.update({fileId: fileId}, {\n                    $set: {\n                        createdAt: new Date(),\n                        value: token\n                    }\n                });\n            } else {\n                UploadFS.tokens.insert({\n                    createdAt: new Date(),\n                    fileId: fileId,\n                    value: token\n                });\n            }\n            return token;\n        };\n\n        /**\n         * Generates a random token\n         * @param pattern\n         * @return {string}\n         */\n        self.generateToken = function (pattern) {\n            return (pattern || 'xyxyxyxyxy').replace(/[xy]/g, function (c) {\n                let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n                let s = v.toString(16);\n                return Math.round(Math.random()) ? s.toUpperCase() : s;\n            });\n        };\n\n        /**\n         * Transforms the file on reading\n         * @param readStream\n         * @param writeStream\n         * @param fileId\n         * @param file\n         * @param request\n         * @param headers\n         */\n        self.transformRead = function (readStream, writeStream, fileId, file, request, headers) {\n            if (typeof transformRead === 'function') {\n                transformRead.call(self, readStream, writeStream, fileId, file, request, headers);\n            } else {\n                readStream.pipe(writeStream);\n            }\n        };\n\n        /**\n         * Transforms the file on writing\n         * @param readStream\n         * @param writeStream\n         * @param fileId\n         * @param file\n         */\n        self.transformWrite = function (readStream, writeStream, fileId, file) {\n            if (typeof transformWrite === 'function') {\n                transformWrite.call(self, readStream, writeStream, fileId, file);\n            } else {\n                readStream.pipe(writeStream);\n            }\n        };\n\n        /**\n         * Writes the file to the store\n         * @param rs\n         * @param fileId\n         * @param callback\n         */\n        self.write = function (rs, fileId, callback) {\n            let file = collection.findOne({_id: fileId});\n            let ws = self.getWriteStream(fileId, file);\n\n            let errorHandler = Meteor.bindEnvironment(function (err) {\n                collection.remove({_id: fileId});\n                self.onWriteError.call(self, err, fileId, file);\n                callback.call(self, err);\n            });\n\n            ws.on('error', errorHandler);\n            ws.on('finish', Meteor.bindEnvironment(function () {\n                let size = 0;\n                let readStream = self.getReadStream(fileId, file);\n\n                readStream.on('error', Meteor.bindEnvironment(function (error) {\n                    callback.call(self, error, null);\n                }));\n                readStream.on('data', Meteor.bindEnvironment(function (data) {\n                    size += data.length;\n                }));\n                readStream.on('end', Meteor.bindEnvironment(function () {\n                    // Set file attribute\n                    file.complete = true;\n                    file.path = self.getFileRelativeURL(fileId);\n                    file.progress = 1;\n                    file.size = size;\n                    file.token = self.generateToken();\n                    file.uploading = false;\n                    file.uploadedAt = new Date();\n                    file.url = self.getFileURL(fileId);\n\n                    // Sets the file URL when file transfer is complete,\n                    // this way, the image will loads entirely.\n                    collection.direct.update({_id: fileId}, {\n                        $set: {\n                            complete: file.complete,\n                            path: file.path,\n                            progress: file.progress,\n                            size: file.size,\n                            token: file.token,\n                            uploading: file.uploading,\n                            uploadedAt: file.uploadedAt,\n                            url: file.url\n                        }\n                    });\n\n                    // Return file info\n                    callback.call(self, null, file);\n\n                    // Execute callback\n                    if (typeof self.onFinishUpload == 'function') {\n                        self.onFinishUpload.call(self, file);\n                    }\n\n                    // Simulate write speed\n                    if (UploadFS.config.simulateWriteDelay) {\n                        Meteor._sleepForMs(UploadFS.config.simulateWriteDelay);\n                    }\n\n                    // Copy file to other stores\n                    if (copyTo instanceof Array) {\n                        for (let i = 0; i < copyTo.length; i += 1) {\n                            let store = copyTo[i];\n\n                            if (!store.getFilter() || store.getFilter().isValid(file)) {\n                                self.copy(fileId, store);\n                            }\n                        }\n                    }\n                }));\n            }));\n\n            // Execute transformation\n            self.transformWrite(rs, ws, fileId, file);\n        };\n    }\n\n    if (Meteor.isServer) {\n        const fs = Npm.require('fs');\n\n        // Code executed after removing file\n        collection.after.remove(function (userId, file) {\n            // Remove associated tokens\n            UploadFS.tokens.remove({fileId: file._id});\n\n            if (copyTo instanceof Array) {\n                for (let i = 0; i < copyTo.length; i += 1) {\n                    // Remove copies in stores\n                    copyTo[i].getCollection().remove({originalId: file._id});\n                }\n            }\n        });\n\n        // Code executed before inserting file\n        collection.before.insert(function (userId, file) {\n            if (!self.permissions.checkInsert(userId, file)) {\n                throw new Meteor.Error('forbidden', \"Forbidden\");\n            }\n        });\n\n        // Code executed before updating file\n        collection.before.update(function (userId, file, fields, modifiers) {\n            if (!self.permissions.checkUpdate(userId, file, fields, modifiers)) {\n                throw new Meteor.Error('forbidden', \"Forbidden\");\n            }\n        });\n\n        // Code executed before removing file\n        collection.before.remove(function (userId, file) {\n            if (!self.permissions.checkRemove(userId, file)) {\n                throw new Meteor.Error('forbidden', \"Forbidden\");\n            }\n\n            // Delete the physical file in the store\n            self.delete(file._id);\n\n            let tmpFile = UploadFS.getTempFilePath(file._id);\n\n            // Delete the temp file\n            fs.stat(tmpFile, function (err) {\n                !err && fs.unlink(tmpFile, function (err) {\n                    err && console.error(`ufs: cannot delete temp file at ${tmpFile} (${err.message})`);\n                });\n            });\n        });\n    }\n};\n\n/**\n * Returns the file URL\n * @param fileId\n */\nUploadFS.Store.prototype.getFileRelativeURL = function (fileId) {\n    let file = this.getCollection().findOne({_id: fileId}, {fields: {name: 1}});\n    return file && this.getRelativeURL(fileId + '/' + encodeURIComponent(file.name));\n};\n\n/**\n * Returns the file URL\n * @param fileId\n */\nUploadFS.Store.prototype.getFileURL = function (fileId) {\n    let file = this.getCollection().findOne({_id: fileId}, {fields: {name: 1}});\n    return file && this.getURL(fileId + '/' + encodeURIComponent(file.name));\n};\n\n/**\n * Returns the store relative URL\n * @param path\n */\nUploadFS.Store.prototype.getRelativeURL = function (path) {\n    return [UploadFS.config.storesPath, this.getName(), path].join('/').replace(/\\/$/, '');\n};\n\n/**\n * Returns the store absolute URL\n * @param path\n */\nUploadFS.Store.prototype.getURL = function (path) {\n    return Meteor.absoluteUrl(this.getRelativeURL(path), {secure: UploadFS.config.https});\n};\n\n/**\n * Completes the file upload\n * @param url\n * @param file\n * @param callback\n */\nUploadFS.Store.prototype.importFromURL = function (url, file, callback) {\n    Meteor.call('ufsImportURL', url, file, this.getName(), callback);\n};\n\nif (Meteor.isServer) {\n    /**\n     * Deletes a file async\n     * @param fileId\n     * @param callback\n     */\n    UploadFS.Store.prototype.delete = function (fileId, callback) {\n        throw new Error('delete is not implemented');\n    };\n\n    /**\n     * Returns the file read stream\n     * @param fileId\n     * @param file\n     */\n    UploadFS.Store.prototype.getReadStream = function (fileId, file) {\n        throw new Error('getReadStream is not implemented');\n    };\n\n    /**\n     * Returns the file write stream\n     * @param fileId\n     * @param file\n     */\n    UploadFS.Store.prototype.getWriteStream = function (fileId, file) {\n        throw new Error('getWriteStream is not implemented');\n    };\n\n    /**\n     * Callback for copy errors\n     * @param err\n     * @param fileId\n     * @param file\n     * @return boolean\n     */\n    UploadFS.Store.prototype.onCopyError = function (err, fileId, file) {\n        console.error(`ufs: cannot copy file \"${fileId}\" (${err.message})`, err);\n    };\n\n    /**\n     * Called when a file has been uploaded\n     * @param file\n     */\n    UploadFS.Store.prototype.onFinishUpload = function (file) {\n    };\n\n    /**\n     * Called when a file is read from the store\n     * @param fileId\n     * @param file\n     * @param request\n     * @param response\n     * @return boolean\n     */\n    UploadFS.Store.prototype.onRead = function (fileId, file, request, response) {\n        return true;\n    };\n\n    /**\n     * Callback for read errors\n     * @param err\n     * @param fileId\n     * @param file\n     * @return boolean\n     */\n    UploadFS.Store.prototype.onReadError = function (err, fileId, file) {\n        console.error(`ufs: cannot read file \"${fileId}\" (${err.message})`, err);\n    };\n\n    /**\n     * Callback for write errors\n     * @param err\n     * @param fileId\n     * @param file\n     * @return boolean\n     */\n    UploadFS.Store.prototype.onWriteError = function (err, fileId, file) {\n        console.error(`ufs: cannot write file \"${fileId}\" (${err.message})`, err);\n    };\n}\n","import {_} from 'meteor/underscore';\nimport {check} from 'meteor/check';\nimport {Meteor} from 'meteor/meteor';\n\nconst fs = Npm.require('fs');\nconst http = Npm.require('http');\nconst https = Npm.require('https');\nconst Future = Npm.require('fibers/future');\n\n\nMeteor.methods({\n\n    /**\n     * Completes the file transfer\n     * @param fileId\n     * @param storeName\n     * @param token\n     */\n    ufsComplete: function (fileId, storeName, token) {\n        check(fileId, String);\n        check(storeName, String);\n        check(token, String);\n\n        // Get store\n        let store = UploadFS.getStore(storeName);\n        if (!store) {\n            throw new Meteor.Error('invalid-store', \"Store not found\");\n        }\n        // Check token\n        if (!store.checkToken(token, fileId)) {\n            throw new Meteor.Error('invalid-token', \"Token is not valid\");\n        }\n\n        let fut = new Future();\n        let tmpFile = UploadFS.getTempFilePath(fileId);\n\n        // Get the temp file\n        let rs = fs.createReadStream(tmpFile, {\n            flags: 'r',\n            encoding: null,\n            autoClose: true\n        });\n\n        rs.on('error', Meteor.bindEnvironment(function (err) {\n            console.error(err);\n            store.getCollection().remove({_id: fileId});\n            fut.throw(err);\n        }));\n\n        // Save file in the store\n        store.write(rs, fileId, Meteor.bindEnvironment(function (err, file) {\n            fs.unlink(tmpFile, function (err) {\n                err && console.error(`ufs: cannot delete temp file \"${tmpFile}\" (${err.message})`);\n            });\n\n            if (err) {\n                fut.throw(err);\n            } else {\n                // File has been fully uploaded\n                // so we don't need to keep the token anymore.\n                // Also this ensure that the file cannot be modified with extra chunks later.\n                UploadFS.tokens.remove({fileId: fileId});\n                fut.return(file);\n            }\n        }));\n        return fut.wait();\n    },\n\n    /**\n     * Creates the file and returns the file upload token\n     * @param file\n     * @returns {{fileId: string, token: *, url}}\n     */\n    ufsCreate: function (file) {\n        check(file, Object);\n\n        if (typeof file.name !== 'string' || !file.name.length) {\n            throw new Meteor.Error('invalid-file-name', \"file name is not valid\");\n        }\n        if (typeof file.store !== 'string' || !file.store.length) {\n            throw new Meteor.Error('invalid-store', \"store is not valid\");\n        }\n        // Get store\n        let store = UploadFS.getStore(file.store);\n        if (!store) {\n            throw new Meteor.Error('invalid-store', \"Store not found\");\n        }\n\n        // Set default info\n        file.complete = false;\n        file.uploading = false;\n        file.extension = file.name && file.name.substr((~-file.name.lastIndexOf('.') >>> 0) + 2).toLowerCase();\n        // Assign file MIME type based on the extension\n        if (file.extension && !file.type) {\n            file.type = UploadFS.getMimeType(file.extension) || 'application/octet-stream';\n        }\n        file.progress = 0;\n        file.size = parseInt(file.size) || 0;\n        file.userId = file.userId || this.userId;\n\n        // Check if the file matches store filter\n        let filter = store.getFilter();\n        if (filter instanceof UploadFS.Filter) {\n            filter.check(file);\n        }\n\n        // Create the file\n        let fileId = store.create(file);\n        let token = store.createToken(fileId);\n        let uploadUrl = store.getURL(`${fileId}?token=${token}`);\n\n        return {\n            fileId: fileId,\n            token: token,\n            url: uploadUrl\n        };\n    },\n\n    /**\n     * Deletes a file\n     * @param fileId\n     * @param storeName\n     * @param token\n     * @returns {*}\n     */\n    ufsDelete: function (fileId, storeName, token) {\n        check(fileId, String);\n        check(storeName, String);\n        check(token, String);\n\n        // Check store\n        let store = UploadFS.getStore(storeName);\n        if (!store) {\n            throw new Meteor.Error('invalid-store', \"Store not found\");\n        }\n        // Ignore files that does not exist\n        if (store.getCollection().find({_id: fileId}).count() === 0) {\n            return 1;\n        }\n        // Check token\n        if (!store.checkToken(token, fileId)) {\n            throw new Meteor.Error('invalid-token', \"Token is not valid\");\n        }\n        return store.getCollection().remove({_id: fileId});\n    },\n\n    /**\n     * Imports a file from the URL\n     * @param url\n     * @param file\n     * @param storeName\n     * @return {*}\n     */\n    ufsImportURL: function (url, file, storeName) {\n        check(url, String);\n        check(file, Object);\n        check(storeName, String);\n\n        // Check URL\n        if (typeof url !== 'string' || url.length <= 0) {\n            throw new Meteor.Error('invalid-url', \"The url is not valid\");\n        }\n        // Check file\n        if (typeof file !== 'object' || file === null) {\n            throw new Meteor.Error('invalid-file', \"The file is not valid\");\n        }\n        // Check store\n        let store = UploadFS.getStore(storeName);\n        if (!store) {\n            throw new Meteor.Error('invalid-store', 'The store does not exist');\n        }\n\n        // Extract file info\n        if (!file.name) {\n            file.name = url.replace(/\\?.*$/, '').split('/').pop();\n        }\n        if (file.name && !file.extension) {\n            file.extension = file.name && file.name.substr((~-file.name.lastIndexOf('.') >>> 0) + 2).toLowerCase();\n        }\n        if (file.extension && !file.type) {\n            // Assign file MIME type based on the extension\n            file.type = UploadFS.getMimeType(file.extension) || 'application/octet-stream';\n        }\n        // Check if file is valid\n        if (store.getFilter() instanceof UploadFS.Filter) {\n            store.getFilter().check(file);\n        }\n\n        if (file.originalUrl) {\n            console.warn(`ufs: The \"originalUrl\" attribute is automatically set when importing a file from a URL`);\n        }\n\n        // Add original URL\n        file.originalUrl = url;\n\n        // Create the file\n        file.complete = false;\n        file.uploading = true;\n        file.progress = 0;\n        file._id = store.create(file);\n\n        let fut = new Future();\n        let proto;\n\n        // Detect protocol to use\n        if (/http:\\/\\//i.test(url)) {\n            proto = http;\n        } else if (/https:\\/\\//i.test(url)) {\n            proto = https;\n        }\n\n        this.unblock();\n\n        // Download file\n        proto.get(url, Meteor.bindEnvironment(function (res) {\n            // Save the file in the store\n            store.write(res, file._id, function (err, file) {\n                if (err) {\n                    fut.throw(err);\n                } else {\n                    fut.return(file);\n                }\n            });\n        })).on('error', function (err) {\n            fut.throw(err);\n        });\n        return fut.wait();\n    },\n\n    /**\n     * Marks the file uploading as stopped\n     * @param fileId\n     * @param storeName\n     * @param token\n     * @returns {*}\n     */\n    ufsStop: function (fileId, storeName, token) {\n        check(fileId, String);\n        check(storeName, String);\n        check(token, String);\n\n        // Check store\n        let store = UploadFS.getStore(storeName);\n        if (!store) {\n            throw new Meteor.Error('invalid-store', \"Store not found\");\n        }\n        // Check file\n        let file = store.getCollection().find({_id: fileId}, {fields: {userId: 1}});\n        if (!file) {\n            throw new Meteor.Error('invalid-file', \"File not found\");\n        }\n        // Check token\n        if (!store.checkToken(token, fileId)) {\n            throw new Meteor.Error('invalid-token', \"Token is not valid\");\n        }\n\n        return store.getCollection().update({_id: fileId}, {\n            $set: {uploading: false}\n        });\n    }\n});\n","import {_} from 'meteor/underscore';\nimport {Meteor} from 'meteor/meteor';\nimport {WebApp} from 'meteor/webapp';\n\nconst domain = Npm.require('domain');\nconst fs = Npm.require('fs');\nconst http = Npm.require('http');\nconst https = Npm.require('https');\nconst mkdirp = Npm.require('mkdirp');\nconst stream = Npm.require('stream');\nconst URL = Npm.require('url');\nconst zlib = Npm.require('zlib');\n\n\nMeteor.startup(() => {\n    let path = UploadFS.config.tmpDir;\n    let mode = UploadFS.config.tmpDirPermissions;\n\n    fs.stat(path, (err) => {\n        if (err) {\n            // Create the temp directory\n            mkdirp(path, {mode: mode}, (err) => {\n                if (err) {\n                    console.error(`ufs: cannot create temp directory at \"${path}\" (${err.message})`);\n                } else {\n                    console.log(`ufs: temp directory created at \"${path}\"`);\n                }\n            });\n        } else {\n            // Set directory permissions\n            fs.chmod(path, mode, (err) => {\n                err && console.error(`ufs: cannot set temp directory permissions ${mode} (${err.message})`);\n            });\n        }\n    });\n});\n\n// Create domain to handle errors\n// and possibly avoid server crashes.\nlet d = domain.create();\n\nd.on('error', (err) => {\n    console.error('ufs: ' + err.message);\n});\n\n// Listen HTTP requests to serve files\nWebApp.connectHandlers.use((req, res, next) => {\n    // Quick check to see if request should be catch\n    if (req.url.indexOf(UploadFS.config.storesPath) === -1) {\n        next();\n        return;\n    }\n\n    // Remove store path\n    let parsedUrl = URL.parse(req.url);\n    let path = parsedUrl.pathname.substr(UploadFS.config.storesPath.length + 1);\n\n    let allowCORS = ()=> {\n        // res.setHeader('Access-Control-Allow-Origin', req.headers.origin);\n        res.setHeader(\"Access-Control-Allow-Methods\", \"POST\");\n        res.setHeader(\"Access-Control-Allow-Origin\", \"*\");\n        res.setHeader(\"Access-Control-Allow-Headers\", \"Content-Type\");\n    };\n\n    if (req.method === \"OPTIONS\") {\n        let regExp = new RegExp('^\\/([^\\/\\?]+)\\/([^\\/\\?]+)$');\n        let match = regExp.exec(path);\n\n        // Request is not valid\n        if (match === null) {\n            res.writeHead(400);\n            res.end();\n            return;\n        }\n\n        // Get store\n        let store = UploadFS.getStore(match[1]);\n        if (!store) {\n            res.writeHead(404);\n            res.end();\n            return;\n        }\n\n        // If a store is found, go ahead and allow the origin\n        allowCORS();\n\n        next();\n    }\n    else if (req.method === 'POST') {\n        // Get store\n        let regExp = new RegExp('^\\/([^\\/\\?]+)\\/([^\\/\\?]+)$');\n        let match = regExp.exec(path);\n\n        // Request is not valid\n        if (match === null) {\n            res.writeHead(400);\n            res.end();\n            return;\n        }\n\n        // Get store\n        let store = UploadFS.getStore(match[1]);\n        if (!store) {\n            res.writeHead(404);\n            res.end();\n            return;\n        }\n\n        // If a store is found, go ahead and allow the origin\n        allowCORS();\n\n        // Get file\n        let fileId = match[2];\n        if (store.getCollection().find({_id: fileId}).count() === 0) {\n            res.writeHead(404);\n            res.end();\n            return;\n        }\n\n        // Check upload token\n        if (!store.checkToken(req.query.token, fileId)) {\n            res.writeHead(403);\n            res.end();\n            return;\n        }\n\n        let tmpFile = UploadFS.getTempFilePath(fileId);\n        let ws = fs.createWriteStream(tmpFile, {flags: 'a'});\n        let fields = {uploading: true};\n        let progress = parseFloat(req.query.progress);\n        if (!isNaN(progress) && progress > 0) {\n            fields.progress = Math.min(progress, 1);\n        }\n\n        req.on('data', (chunk) => {\n            ws.write(chunk);\n        });\n        req.on('error', (err) => {\n            res.writeHead(500);\n            res.end();\n        });\n        req.on('end', Meteor.bindEnvironment(() => {\n            // Update completed state without triggering hooks\n            store.getCollection().direct.update({_id: fileId}, {$set: fields});\n            ws.end();\n        }));\n        ws.on('error', (err) => {\n            console.error(`ufs: cannot write chunk of file \"${fileId}\" (${err.message})`);\n            fs.unlink(tmpFile, (err) => {\n                err && console.error(`ufs: cannot delete temp file \"${tmpFile}\" (${err.message})`);\n            });\n            res.writeHead(500);\n            res.end();\n        });\n        ws.on('finish', () => {\n            res.writeHead(204, {\"Content-Type\": 'text/plain'});\n            res.end();\n        });\n    }\n    else if (req.method == 'GET') {\n        // Get store, file Id and file name\n        let regExp = new RegExp('^\\/([^\\/\\?]+)\\/([^\\/\\?]+)(?:\\/([^\\/\\?]+))?$');\n        let match = regExp.exec(path);\n\n        // Avoid 504 Gateway timeout error\n        // if file is not handled by UploadFS.\n        if (match === null) {\n            next();\n            return;\n        }\n\n        // Get store\n        let storeName = match[1];\n        let store = UploadFS.getStore(storeName);\n\n        if (!store) {\n            res.writeHead(404);\n            res.end();\n            return;\n        }\n\n        if (store.onRead !== null && store.onRead !== undefined && typeof store.onRead !== 'function') {\n            console.error(`ufs: store \"${storeName}\" onRead is not a function`);\n            res.writeHead(500);\n            res.end();\n            return;\n        }\n\n        // Remove file extension from file Id\n        let index = match[2].indexOf('.');\n        let fileId = index !== -1 ? match[2].substr(0, index) : match[2];\n\n        // Get file from database\n        let file = store.getCollection().findOne({_id: fileId});\n        if (!file) {\n            res.writeHead(404);\n            res.end();\n            return;\n        }\n\n        // Simulate read speed\n        if (UploadFS.config.simulateReadDelay) {\n            Meteor._sleepForMs(UploadFS.config.simulateReadDelay);\n        }\n\n        d.run(() => {\n            // Check if the file can be accessed\n            if (store.onRead.call(store, fileId, file, req, res) !== false) {\n                let options = {};\n                let status = 200;\n\n                // Prepare response headers\n                let headers = {\n                    'Content-Type': file.type,\n                    'Content-Length': file.size\n                };\n\n                // Parse request headers\n                if (typeof req.headers === 'object') {\n                    // Send data in range\n                    if (typeof req.headers.range === 'string') {\n                        let range = req.headers.range;\n\n                        // Range is not valid\n                        if (!range) {\n                            res.writeHead(416);\n                            res.end();\n                            return;\n                        }\n\n                        let positions = range.replace(/bytes=/, '').split('-');\n                        let start = parseInt(positions[0], 10);\n                        let total = file.size;\n                        let end = positions[1] ? parseInt(positions[1], 10) : total - 1;\n\n                        // Update headers\n                        headers['Content-Range'] = `bytes ${start}-${end}/${total}`;\n                        headers['Accept-Ranges'] = `bytes`;\n                        headers['Content-Length'] = (end - start) + 1;\n\n                        status = 206; // partial content\n                        options.start = start;\n                        options.end = end;\n                    }\n                }\n\n                // Open the file stream\n                let rs = store.getReadStream(fileId, file, options);\n                let ws = new stream.PassThrough();\n\n                rs.on('error', Meteor.bindEnvironment((err) => {\n                    store.onReadError.call(store, err, fileId, file);\n                    res.end();\n                }));\n                ws.on('error', Meteor.bindEnvironment((err) => {\n                    store.onReadError.call(store, err, fileId, file);\n                    res.end();\n                }));\n                ws.on('close', () => {\n                    // Close output stream at the end\n                    ws.emit('end');\n                });\n\n                // Transform stream\n                store.transformRead(rs, ws, fileId, file, req, headers);\n\n                // Parse request headers\n                if (typeof req.headers === 'object') {\n                    // Compress data using if needed (ignore audio/video as they are already compressed)\n                    if (typeof req.headers['accept-encoding'] === 'string' && !/^(audio|video)/.test(file.type)) {\n                        let accept = req.headers['accept-encoding'];\n\n                        // Compress with gzip\n                        if (accept.match(/\\bgzip\\b/)) {\n                            headers['Content-Encoding'] = 'gzip';\n                            delete headers['Content-Length'];\n                            res.writeHead(status, headers);\n                            ws.pipe(zlib.createGzip()).pipe(res);\n                            return;\n                        }\n                        // Compress with deflate\n                        else if (accept.match(/\\bdeflate\\b/)) {\n                            headers['Content-Encoding'] = 'deflate';\n                            delete headers['Content-Length'];\n                            res.writeHead(status, headers);\n                            ws.pipe(zlib.createDeflate()).pipe(res);\n                            return;\n                        }\n                    }\n                }\n\n                // Send raw data\n                if (!headers['Content-Encoding']) {\n                    res.writeHead(status, headers);\n                    ws.pipe(res);\n                }\n\n            } else {\n                res.end();\n            }\n        });\n    } else {\n        next();\n    }\n});\n"]}